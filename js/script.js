// ===== –°–õ–û–í–û –î–ù–Ø =====
async function loadWord() {
  const res = await fetch("data/words.json");
  const words = await res.json();
  const index = Math.floor(Math.random() * words.length);
  const word = words[index];

  document.getElementById("word").innerText = word.word;
  document.getElementById(
    "translation"
  ).innerText = `–ü–µ—Ä–µ–≤–æ–¥: ${word.translation}`;
  document.getElementById("example").innerText = `–ü—Ä–∏–º–µ—Ä: ${word.example}`;
}

function speakWord() {
  const word = document.getElementById("word").innerText;
  const utterance = new SpeechSynthesisUtterance(word);
  utterance.lang = "en-US";
  speechSynthesis.speak(utterance);
}

function nextWord() {
  loadWord();
}

// ===== –§–†–ê–ó–ê –î–ù–Ø =====
async function loadPhrase() {
  const res = await fetch("data/phrases.json");
  const phrases = await res.json();
  const index = Math.floor(Math.random() * phrases.length);
  const phrase = phrases[index];

  document.getElementById("phrase").innerText = phrase.phrase;
  document.getElementById(
    "translation"
  ).innerText = `–ü–µ—Ä–µ–≤–æ–¥: ${phrase.translation}`;
  document.getElementById("example").innerText = `–ü—Ä–∏–º–µ—Ä: ${phrase.example}`;
}

function speakPhrase() {
  const phrase = document.getElementById("phrase").innerText;
  const utterance = new SpeechSynthesisUtterance(phrase);
  utterance.lang = "en-US";
  speechSynthesis.speak(utterance);
}

function nextPhrase() {
  loadPhrase();
}

// ===== –¢–ï–ú–´ =====
async function showTopics() {
  const level = document.getElementById("levelSelect").value;
  const topicList = document.getElementById("topicList");
  const topicContent = document.getElementById("topicContent");

  topicList.innerHTML = "";
  topicContent.innerHTML = "";

  if (!level) return;

  const res = await fetch("data/topics.json");
  const data = await res.json();

  const topics = data[level];
  if (!topics) {
    topicList.innerText = "–¢–µ–º –Ω–µ—Ç.";
    return;
  }

  for (let key in topics) {
    const btn = document.createElement("button");
    btn.innerText = topics[key].title;
    btn.className = "menu-button";
    btn.onclick = () => showTopicContent(topics[key]);
    topicList.appendChild(btn);
  }
}

function showTopicContent(topic) {
  const topicContent = document.getElementById("topicContent");
  topicContent.innerHTML = `
    <h2>${topic.title}</h2>
    <h3>üß† –°–ª–æ–≤–∞:</h3>
    <ul>${topic.vocab.map((v) => `<li>${v.en} ‚Äî ${v.ru}</li>`).join("")}</ul>
    <h3>üí¨ –§—Ä–∞–∑—ã:</h3>
    <ul>${topic.phrases.map((p) => `<li>${p.en} ‚Äî ${p.ru}</li>`).join("")}</ul>
    <h3>üìÉ –ü—Ä–∏–º–µ—Ä—ã:</h3>
    <ul>${topic.examples.map((e) => `<li>üí¨ ${e}</li>`).join("")}</ul>
    <h3>üìù –ó–∞–¥–∞–Ω–∏–µ:</h3>
    <p>${topic.task}</p>
  `;
}

// ===== –ö–ê–†–¢–û–ß–ö–ò =====
let flashcards = [];
let currentFlashcardIndex = 0;

async function loadFlashcards() {
  const res = await fetch("data/flashcards.json");
  flashcards = await res.json();
  currentFlashcardIndex = Math.floor(Math.random() * flashcards.length);
  showFlashcard();
}

function showFlashcard() {
  document.getElementById("front").style.display = "block";
  document.getElementById("back").style.display = "none";

  const card = flashcards[currentFlashcardIndex];
  document.getElementById("frontText").innerText = card.word;
  document.getElementById(
    "backText"
  ).innerText = `${card.translation}\n\nüí¨ ${card.example}`;
}

function flipCard() {
  document.getElementById("front").style.display = "none";
  document.getElementById("back").style.display = "block";
}

function nextFlashcard() {
  currentFlashcardIndex = (currentFlashcardIndex + 1) % flashcards.length;

  let c = parseInt(localStorage.getItem("flashcardCount") || 0);
  localStorage.setItem("flashcardCount", c + 1);

  showFlashcard();
}

function speakFlashcard() {
  const card = flashcards[currentFlashcardIndex];
  const utterance = new SpeechSynthesisUtterance(card.word);
  utterance.lang = "en-US";
  speechSynthesis.speak(utterance);
}

// ===== –ú–ò–ù–ò-–¢–ï–°–¢ =====
let currentQuiz = {};
let quizCards = [];

async function loadQuizCards() {
  const res = await fetch("data/flashcards.json");
  quizCards = await res.json();
  nextQuiz();
}

function nextQuiz() {
  const quizWordElement = document.getElementById("quizWord");
  const quizOptionsElement = document.getElementById("quizOptions");
  const quizResult = document.getElementById("quizResult");

  quizResult.innerText = "";
  quizOptionsElement.innerHTML = "";

  const correctIndex = Math.floor(Math.random() * quizCards.length);
  currentQuiz = quizCards[correctIndex];

  const options = [currentQuiz.translation];
  while (options.length < 3) {
    const random =
      quizCards[Math.floor(Math.random() * quizCards.length)].translation;
    if (!options.includes(random)) options.push(random);
  }

  options.sort(() => Math.random() - 0.5);

  quizWordElement.innerText = `–ö–∞–∫ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è: ${currentQuiz.word}?`;

  options.forEach((option) => {
    const btn = document.createElement("button");
    btn.className = "menu-button";
    btn.innerText = option;
    btn.onclick = () => {
      if (option === currentQuiz.translation) {
        quizResult.innerText = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!";
        quizResult.style.color = "lightgreen";
      } else {
        quizResult.innerText = `‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–æ: ${currentQuiz.translation}`;
        quizResult.style.color = "#ff8080";
      }
    };
    quizOptionsElement.appendChild(btn);
  });
}
